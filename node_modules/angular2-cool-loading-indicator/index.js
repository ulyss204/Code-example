"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var angular2_cool_http_1 = require("angular2-cool-http");
var DEFAULT_INDICATOR_DELAY = 500;
var CoolLoadingIndicator = (function () {
    function CoolLoadingIndicator(coolHttp) {
        this.showIndicatorCounter = 0;
        this.showIndicator = false;
        this.coolHttp = coolHttp;
    }
    CoolLoadingIndicator.prototype.ngOnInit = function () {
        this.coolHttp.registerRequestInterceptor(this);
        this.coolHttp.registerResponseInterceptor(this);
    };
    CoolLoadingIndicator.prototype.beforeRequestAsync = function () {
        var _this = this;
        var that = this;
        this.showIndicatorCounter++;
        if (this.indicatorDelay) {
            setTimeout(function () {
                if (that.shouldShowIndicator) {
                    _this.showIndicator = true;
                }
            }, this.indicatorDelay || DEFAULT_INDICATOR_DELAY);
        }
        else if (this.shouldShowIndicator) {
            this.showIndicator = true;
        }
        return Promise.resolve(false);
    };
    CoolLoadingIndicator.prototype.afterResponseAsync = function () {
        this.showIndicatorCounter--;
        if (this.shouldHideIndicator) {
            this.showIndicator = false;
        }
        return Promise.resolve(false);
    };
    Object.defineProperty(CoolLoadingIndicator.prototype, "shouldShowIndicator", {
        get: function () {
            return this.showIndicatorCounter > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CoolLoadingIndicator.prototype, "shouldHideIndicator", {
        get: function () {
            return this.showIndicatorCounter < 1;
        },
        enumerable: true,
        configurable: true
    });
    CoolLoadingIndicator.prototype.ngOnDestroy = function () {
        this.coolHttp.deregisterRequestInterceptor(this);
        this.coolHttp.deregisterResponseInterceptor(this);
    };
    return CoolLoadingIndicator;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], CoolLoadingIndicator.prototype, "indicatorDelay", void 0);
CoolLoadingIndicator = __decorate([
    core_1.Component({
        selector: 'cool-loading-indicator',
        template: "\n        <div *ngIf=\"showIndicator\" class=\"cool-loading-indicator\">\n            <ng-content></ng-content>\n        </div>\n    "
    }),
    __metadata("design:paramtypes", [angular2_cool_http_1.CoolHttp])
], CoolLoadingIndicator);
exports.CoolLoadingIndicator = CoolLoadingIndicator;
var CoolLoadingIndicatorModule = (function () {
    function CoolLoadingIndicatorModule() {
    }
    return CoolLoadingIndicatorModule;
}());
CoolLoadingIndicatorModule = __decorate([
    core_1.NgModule({
        exports: [CoolLoadingIndicator],
        imports: [common_1.CommonModule, angular2_cool_http_1.CoolHttpModule],
        declarations: [CoolLoadingIndicator]
    })
], CoolLoadingIndicatorModule);
exports.CoolLoadingIndicatorModule = CoolLoadingIndicatorModule;
//# sourceMappingURL=index.js.map