{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 6540d140dc5adcdc9ea3","webpack:///./src/index.js","webpack:///./src/shuffle.js","webpack:///./~/custom-event-polyfill/custom-event-polyfill.js","webpack:///./~/matches-selector/index.js","webpack:///./~/array-uniq/index.js","webpack:///./~/xtend/immutable.js","webpack:///./~/throttleit/index.js","webpack:///./~/array-parallel/index.js","webpack:///./src/point.js","webpack:///./src/get-number.js","webpack:///./src/shuffle-item.js","webpack:///./src/classes.js","webpack:///./src/get-number-style.js","webpack:///./src/computed-size.js","webpack:///./src/sorter.js","webpack:///./src/on-transition-end.js","webpack:///./src/layout.js"],"names":[],"mappings":"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","file":"shuffle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"shuffle\"] = factory();\n\telse\n\t\troot[\"shuffle\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6540d140dc5adcdc9ea3\n **/","module.exports = require('./shuffle').default;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","'use strict';\n\nimport 'custom-event-polyfill';\nimport matches from 'matches-selector';\nimport arrayUnique from 'array-uniq';\nimport xtend from 'xtend';\nimport throttle from 'throttleit';\nimport parallel from 'array-parallel';\nimport Point from './point';\nimport ShuffleItem from './shuffle-item';\nimport Classes from './classes';\nimport getNumberStyle from './get-number-style';\nimport sorter from './sorter';\nimport { onTransitionEnd, cancelTransitionEnd } from './on-transition-end';\nimport { getItemPosition, getColumnSpan, getAvailablePositions, getShortColumn } from './layout';\n\nfunction toArray(arrayLike) {\n  return Array.prototype.slice.call(arrayLike);\n}\n\nfunction arrayMax(array) {\n  return Math.max.apply(Math, array);\n}\n\nfunction arrayIncludes(array, obj) {\n  if (arguments.length === 2) {\n    return arrayIncludes(array)(obj);\n  }\n\n  return function (obj) {\n    return array.indexOf(obj) > -1;\n  };\n}\n\n// Used for unique instance variables\nlet id = 0;\n\nclass Shuffle {\n\n  /**\n   * Categorize, sort, and filter a responsive grid of items.\n   *\n   * @param {Element} element An element which is the parent container for the grid items.\n   * @param {Object} [options=Shuffle.options] Options object.\n   * @constructor\n   */\n  constructor(element, options = {}) {\n    this.options = xtend(Shuffle.options, options);\n\n    this.useSizer = false;\n    this.lastSort = {};\n    this.group = this.lastFilter = Shuffle.ALL_ITEMS;\n    this.isEnabled = true;\n    this.isDestroyed = false;\n    this.isInitialized = false;\n    this._transitions = [];\n    this.isTransitioning = false;\n    this._queue = [];\n\n    element = this._getElementOption(element);\n\n    if (!element) {\n      throw new TypeError('Shuffle needs to be initialized with an element.');\n    }\n\n    this.element = element;\n    this.id = 'shuffle_' + id++;\n\n    this._init();\n    this.isInitialized = true;\n  }\n\n  _init() {\n    this.items = this._getItems();\n\n    this.options.sizer = this._getElementOption(this.options.sizer);\n\n    if (this.options.sizer) {\n      this.useSizer = true;\n    }\n\n    // Add class and invalidate styles\n    this.element.classList.add(Shuffle.Classes.BASE);\n\n    // Set initial css for each item\n    this._initItems();\n\n    // Bind resize events\n    this._onResize = this._getResizeFunction();\n    window.addEventListener('resize', this._onResize);\n\n    // Get container css all in one request. Causes reflow\n    var containerCss = window.getComputedStyle(this.element, null);\n    var containerWidth = Shuffle.getSize(this.element).width;\n\n    // Add styles to the container if it doesn't have them.\n    this._validateStyles(containerCss);\n\n    // We already got the container's width above, no need to cause another\n    // reflow getting it again... Calculate the number of columns there will be\n    this._setColumns(containerWidth);\n\n    // Kick off!\n    this.filter(this.options.group, this.options.initialSort);\n\n    // The shuffle items haven't had transitions set on them yet so the user\n    // doesn't see the first layout. Set them now that the first layout is done.\n    // First, however, a synchronous layout must be caused for the previous\n    // styles to be applied without transitions.\n    this.element.offsetWidth; // jshint ignore: line\n    this._setTransitions();\n    this.element.style.transition = 'height ' + this.options.speed + 'ms ' + this.options.easing;\n  }\n\n  /**\n   * Returns a throttled and proxied function for the resize handler.\n   * @return {Function}\n   * @private\n   */\n  _getResizeFunction() {\n    var resizeFunction = this._handleResize.bind(this);\n    return this.options.throttle ?\n        this.options.throttle(resizeFunction, this.options.throttleTime) :\n        resizeFunction;\n  }\n\n  /**\n   * Retrieve an element from an option.\n   * @param {string|jQuery|Element} option The option to check.\n   * @return {?Element} The plain element or null.\n   * @private\n   */\n  _getElementOption(option) {\n    // If column width is a string, treat is as a selector and search for the\n    // sizer element within the outermost container\n    if (typeof option === 'string') {\n      return this.element.querySelector(option);\n\n    // Check for an element\n    } else if (option && option.nodeType && option.nodeType === 1) {\n      return option;\n\n    // Check for jQuery object\n    } else if (option && option.jquery) {\n      return option[0];\n    }\n\n    return null;\n  }\n\n  /**\n   * Ensures the shuffle container has the css styles it needs applied to it.\n   * @param {Object} styles Key value pairs for position and overflow.\n   * @private\n   */\n  _validateStyles(styles) {\n    // Position cannot be static.\n    if (styles.position === 'static') {\n      this.element.style.position = 'relative';\n    }\n\n    // Overflow has to be hidden.\n    if (styles.overflow !== 'hidden') {\n      this.element.style.overflow = 'hidden';\n    }\n  }\n\n  /**\n   * Filter the elements by a category.\n   * @param {string} [category] Category to filter by. If it's given, the last\n   *     category will be used to filter the items.\n   * @param {Array} [collection] Optionally filter a collection. Defaults to\n   *     all the items.\n   * @return {!{visible: Array, hidden: Array}}\n   * @private\n   */\n  _filter(category = this.lastFilter, collection = this.items) {\n    var set = this._getFilteredSets(category, collection);\n\n    // Individually add/remove hidden/visible classes\n    this._toggleFilterClasses(set);\n\n    // Save the last filter in case elements are appended.\n    this.lastFilter = category;\n\n    // This is saved mainly because providing a filter function (like searching)\n    // will overwrite the `lastFilter` property every time its called.\n    if (typeof category === 'string') {\n      this.group = category;\n    }\n\n    return set;\n  }\n\n  /**\n   * Returns an object containing the visible and hidden elements.\n   * @param {string|Function} category Category or function to filter by.\n   * @param {Array.<Element>} items A collection of items to filter.\n   * @return {!{visible: Array, hidden: Array}}\n   * @private\n   */\n  _getFilteredSets(category, items) {\n    let visible = [];\n    let hidden = [];\n\n    // category === 'all', add visible class to everything\n    if (category === Shuffle.ALL_ITEMS) {\n      visible = items;\n\n    // Loop through each item and use provided function to determine\n    // whether to hide it or not.\n    } else {\n      items.forEach((item) => {\n        if (this._doesPassFilter(category, item.element)) {\n          visible.push(item);\n        } else {\n          hidden.push(item);\n        }\n      });\n    }\n\n    return {\n      visible,\n      hidden,\n    };\n  }\n\n  /**\n   * Test an item to see if it passes a category.\n   * @param {string|Function} category Category or function to filter by.\n   * @param {Element} element An element to test.\n   * @return {boolean} Whether it passes the category/filter.\n   * @private\n   */\n  _doesPassFilter(category, element) {\n\n    if (typeof category === 'function') {\n      return category.call(element, element, this);\n\n    // Check each element's data-groups attribute against the given category.\n    } else {\n      let attr = element.getAttribute('data-' + Shuffle.FILTER_ATTRIBUTE_KEY);\n      let keys = this.options.delimeter ?\n          attr.split(this.options.delimeter) :\n          JSON.parse(attr);\n\n      if (Array.isArray(category)) {\n        return category.some(arrayIncludes(keys));\n      }\n\n      return arrayIncludes(keys, category);\n    }\n  }\n\n  /**\n   * Toggles the visible and hidden class names.\n   * @param {{visible, hidden}} Object with visible and hidden arrays.\n   * @private\n   */\n  _toggleFilterClasses({ visible, hidden }) {\n    visible.forEach((item) => {\n      item.show();\n    });\n\n    hidden.forEach((item) => {\n      item.hide();\n    });\n  }\n\n  /**\n   * Set the initial css for each item\n   * @param {Array.<ShuffleItem>} [items] Optionally specifiy at set to initialize.\n   * @private\n   */\n  _initItems(items = this.items) {\n    items.forEach((item) => {\n      item.init();\n    });\n  }\n\n  /**\n   * Remove element reference and styles.\n   * @private\n   */\n  _disposeItems(items = this.items) {\n    items.forEach((item) => {\n      item.dispose();\n    });\n  }\n\n  /**\n   * Updates the visible item count.\n   * @private\n   */\n  _updateItemCount() {\n    this.visibleItems = this._getFilteredItems().length;\n  }\n\n  /**\n   * Sets css transform transition on a group of elements. This is not executed\n   * at the same time as `item.init` so that transitions don't occur upon\n   * initialization of Shuffle.\n   * @param {Array.<ShuffleItem>} items Shuffle items to set transitions on.\n   * @private\n   */\n  _setTransitions(items = this.items) {\n    let speed = this.options.speed;\n    let easing = this.options.easing;\n\n    var str;\n    if (this.options.useTransforms) {\n      str = 'transform ' + speed + 'ms ' + easing +\n        ', opacity ' + speed + 'ms ' + easing;\n    } else {\n      str = 'top ' + speed + 'ms ' + easing +\n        ', left ' + speed + 'ms ' + easing +\n        ', opacity ' + speed + 'ms ' + easing;\n    }\n\n    items.forEach((item) => {\n      item.element.style.transition = str;\n    });\n  }\n\n  _getItems() {\n    return toArray(this.element.children)\n      .filter(el => matches(el, this.options.itemSelector))\n      .map(el => new ShuffleItem(el));\n  }\n\n  /**\n   * When new elements are added to the shuffle container, update the array of\n   * items because that is the order `_layout` calls them.\n   */\n  _updateItemsOrder() {\n    let children = this.element.children;\n    this.items = sorter(this.items, {\n      by(element) {\n        return Array.prototype.indexOf.call(children, element);\n      },\n    });\n  }\n\n  _getFilteredItems() {\n    return this.items.filter(item => item.isVisible);\n  }\n\n  _getConcealedItems() {\n    return this.items.filter(item => !item.isVisible);\n  }\n\n  /**\n   * Returns the column size, based on column width and sizer options.\n   * @param {number} containerWidth Size of the parent container.\n   * @param {number} gutterSize Size of the gutters.\n   * @return {number}\n   * @private\n   */\n  _getColumnSize(containerWidth, gutterSize) {\n    var size;\n\n    // If the columnWidth property is a function, then the grid is fluid\n    if (typeof this.options.columnWidth === 'function') {\n      size = this.options.columnWidth(containerWidth);\n\n    // columnWidth option isn't a function, are they using a sizing element?\n    } else if (this.useSizer) {\n      size = Shuffle.getSize(this.options.sizer).width;\n\n    // if not, how about the explicitly set option?\n    } else if (this.options.columnWidth) {\n      size = this.options.columnWidth;\n\n    // or use the size of the first item\n    } else if (this.items.length > 0) {\n      size = Shuffle.getSize(this.items[0].element, true).width;\n\n    // if there's no items, use size of container\n    } else {\n      size = containerWidth;\n    }\n\n    // Don't let them set a column width of zero.\n    if (size === 0) {\n      size = containerWidth;\n    }\n\n    return size + gutterSize;\n  }\n\n  /**\n   * Returns the gutter size, based on gutter width and sizer options.\n   * @param {number} containerWidth Size of the parent container.\n   * @return {number}\n   * @private\n   */\n  _getGutterSize(containerWidth) {\n    var size;\n    if (typeof this.options.gutterWidth === 'function') {\n      size = this.options.gutterWidth(containerWidth);\n    } else if (this.useSizer) {\n      size = getNumberStyle(this.options.sizer, 'marginLeft');\n    } else {\n      size = this.options.gutterWidth;\n    }\n\n    return size;\n  }\n\n  /**\n   * Calculate the number of columns to be used. Gets css if using sizer element.\n   * @param {number} [containerWidth] Optionally specify a container width if\n   *    it's already available.\n   */\n  _setColumns(containerWidth = Shuffle.getSize(this.element).width) {\n    var gutter = this._getGutterSize(containerWidth);\n    var columnWidth = this._getColumnSize(containerWidth, gutter);\n    var calculatedColumns = (containerWidth + gutter) / columnWidth;\n\n    // Widths given from getStyles are not precise enough...\n    if (Math.abs(Math.round(calculatedColumns) - calculatedColumns) <\n        this.options.columnThreshold) {\n      // e.g. calculatedColumns = 11.998876\n      calculatedColumns = Math.round(calculatedColumns);\n    }\n\n    this.cols = Math.max(Math.floor(calculatedColumns), 1);\n    this.containerWidth = containerWidth;\n    this.colWidth = columnWidth;\n  }\n\n  /**\n   * Adjust the height of the grid\n   */\n  _setContainerSize() {\n    this.element.style.height = this._getContainerSize() + 'px';\n  }\n\n  /**\n   * Based on the column heights, it returns the biggest one.\n   * @return {number}\n   * @private\n   */\n  _getContainerSize() {\n    return arrayMax(this.positions);\n  }\n\n  /**\n   * Get the clamped stagger amount.\n   * @param {number} index Index of the item to be staggered.\n   * @return {number}\n   */\n  _getStaggerAmount(index) {\n    return Math.min(index * this.options.staggerAmount, this.options.staggerAmountMax);\n  }\n\n  /**\n   * @return {boolean} Whether the event was prevented or not.\n   */\n  _dispatch(name, details = {}) {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    details.shuffle = this;\n    return !this.element.dispatchEvent(new CustomEvent(name, {\n      bubbles: true,\n      cancelable: false,\n      detail: details,\n    }));\n  }\n\n  /**\n   * Zeros out the y columns array, which is used to determine item placement.\n   * @private\n   */\n  _resetCols() {\n    var i = this.cols;\n    this.positions = [];\n    while (i--) {\n      this.positions.push(0);\n    }\n  }\n\n  /**\n   * Loops through each item that should be shown and calculates the x, y position.\n   * @param {Array.<ShuffleItem>} items Array of items that will be shown/layed\n   *     out in order in their array.\n   */\n  _layout(items) {\n    let count = 0;\n    items.forEach((item) => {\n      var currPos = item.point;\n      var currScale = item.scale;\n      var itemSize = Shuffle.getSize(item.element, true);\n      var pos = this._getItemPosition(itemSize);\n\n      function callback() {\n        item.element.style.transitionDelay = '';\n        item.applyCss(ShuffleItem.Css.VISIBLE.after);\n      }\n\n      // If the item will not change its position, do not add it to the render\n      // queue. Transitions don't fire when setting a property to the same value.\n      if (Point.equals(currPos, pos) && currScale === ShuffleItem.Scale.VISIBLE) {\n        callback();\n        return;\n      }\n\n      item.point = pos;\n      item.scale = ShuffleItem.Scale.VISIBLE;\n\n      // Use xtend here to clone the object so that the `before` object isn't\n      // modified when the transition delay is added.\n      let styles = xtend(ShuffleItem.Css.VISIBLE.before);\n      styles.transitionDelay = this._getStaggerAmount(count) + 'ms';\n\n      this._queue.push({\n        item,\n        styles,\n        callback,\n      });\n\n      count++;\n    });\n  }\n\n  /**\n   * Determine the location of the next item, based on its size.\n   * @param {{width: number, height: number}} itemSize Object with width and height.\n   * @return {Point}\n   * @private\n   */\n  _getItemPosition(itemSize) {\n    return getItemPosition({\n      itemSize,\n      positions: this.positions,\n      gridSize: this.colWidth,\n      total: this.cols,\n      threshold: this.options.columnThreshold,\n      buffer: this.options.buffer,\n    });\n  }\n\n  /**\n   * Hides the elements that don't match our filter.\n   * @param {Array.<ShuffleItem>} collection Collection to shrink.\n   * @private\n   */\n  _shrink(collection = this._getConcealedItems()) {\n    let count = 0;\n    collection.forEach((item) => {\n      function callback() {\n        item.applyCss(ShuffleItem.Css.HIDDEN.after);\n      }\n\n      // Continuing would add a transitionend event listener to the element, but\n      // that listener would not execute because the transform and opacity would\n      // stay the same.\n      // The callback is executed here because it is not guaranteed to be called\n      // after the transitionend event because the transitionend could be\n      // canceled if another animation starts.\n      if (item.scale === ShuffleItem.Scale.HIDDEN) {\n        callback();\n        return;\n      }\n\n      item.scale = ShuffleItem.Scale.HIDDEN;\n\n      let styles = xtend(ShuffleItem.Css.HIDDEN.before);\n      styles.transitionDelay = this._getStaggerAmount(count) + 'ms';\n\n      this._queue.push({\n        item,\n        styles,\n        callback,\n      });\n\n      count++;\n    });\n  }\n\n  /**\n   * Resize handler.\n   * @private\n   */\n  _handleResize() {\n    // If shuffle is disabled, destroyed, don't do anything\n    if (!this.isEnabled || this.isDestroyed) {\n      return;\n    }\n\n    // Will need to check height in the future if it's layed out horizontaly\n    var containerWidth = Shuffle.getSize(this.element).width;\n\n    // containerWidth hasn't changed, don't do anything\n    if (containerWidth === this.containerWidth) {\n      return;\n    }\n\n    this.update();\n  }\n\n  /**\n   * Returns styles which will be applied to the an item for a transition.\n   * @param {Object} obj Transition options.\n   * @return {!Object} Transforms for transitions, left/top for animate.\n   * @private\n   */\n  _getStylesForTransition({ item, styles }) {\n    if (!styles.transitionDelay) {\n      styles.transitionDelay = '0ms';\n    }\n\n    let x = item.point.x;\n    let y = item.point.y;\n\n    if (this.options.useTransforms) {\n      styles.transform = `translate(${x}px, ${y}px) scale(${item.scale})`;\n    } else {\n      styles.left = x + 'px';\n      styles.top = y + 'px';\n    }\n\n    return styles;\n  }\n\n  /**\n   * Listen for the transition end on an element and execute the itemCallback\n   * when it finishes.\n   * @param {Element} element Element to listen on.\n   * @param {Function} itemCallback Callback for the item.\n   * @param {Function} done Callback to notify `parallel` that this one is done.\n   */\n  _whenTransitionDone(element, itemCallback, done) {\n    let id = onTransitionEnd(element, (evt) => {\n      itemCallback();\n      done(null, evt);\n    });\n\n    this._transitions.push(id);\n  }\n\n  /**\n   * Return a function which will set CSS styles and call the `done` function\n   * when (if) the transition finishes.\n   * @param {Object} opts Transition object.\n   * @return {Function} A function to be called with a `done` function.\n   */\n  _getTransitionFunction(opts) {\n    return (done) => {\n      opts.item.applyCss(this._getStylesForTransition(opts));\n      this._whenTransitionDone(opts.item.element, opts.callback, done);\n    };\n  }\n\n  /**\n   * Execute the styles gathered in the style queue. This applies styles to elements,\n   * triggering transitions.\n   * @private\n   */\n  _processQueue() {\n    if (this.isTransitioning) {\n      this._cancelMovement();\n    }\n\n    let hasSpeed = this.options.speed > 0;\n    let hasQueue = this._queue.length > 0;\n\n    if (hasQueue && hasSpeed && this.isInitialized) {\n      this._startTransitions(this._queue);\n\n    } else if (hasQueue) {\n      this._styleImmediately(this._queue);\n      this._dispatchLayout();\n\n    // A call to layout happened, but none of the newly visible items will\n    // change position or the transition duration is zero, which will not trigger\n    // the transitionend event.\n    } else {\n      this._dispatchLayout();\n    }\n\n    // Remove everything in the style queue\n    this._queue.length = 0;\n  }\n\n  /**\n   * Wait for each transition to finish, the emit the layout event.\n   * @param {Array.<Object>} transitions Array of transition objects.\n   */\n  _startTransitions(transitions) {\n    // Set flag that shuffle is currently in motion.\n    this.isTransitioning = true;\n\n    // Create an array of functions to be called.\n    let callbacks = transitions.map(obj => this._getTransitionFunction(obj));\n\n    parallel(callbacks, this._movementFinished.bind(this));\n  }\n\n  _cancelMovement() {\n    // Remove the transition end event for each listener.\n    this._transitions.forEach(cancelTransitionEnd);\n\n    // Reset the array.\n    this._transitions.length = 0;\n\n    // Show it's no longer active.\n    this.isTransitioning = false;\n  }\n\n  /**\n   * Apply styles without a transition.\n   * @param {Array.<Object>} objects Array of transition objects.\n   * @private\n   */\n  _styleImmediately(objects) {\n    if (objects.length) {\n      let elements = objects.map(obj => obj.item.element);\n\n      Shuffle._skipTransitions(elements, () => {\n        objects.forEach((obj) => {\n          obj.item.applyCss(this._getStylesForTransition(obj));\n          obj.callback();\n        });\n      });\n    }\n  }\n\n  _movementFinished() {\n    this._transitions.length = 0;\n    this.isTransitioning = false;\n    this._dispatchLayout();\n  }\n\n  _dispatchLayout() {\n    this._dispatch(Shuffle.EventType.LAYOUT);\n  }\n\n  /**\n   * The magic. This is what makes the plugin 'shuffle'\n   * @param {string|Function|Array.<string>} [category] Category to filter by.\n   *     Can be a function, string, or array of strings.\n   * @param {Object} [sortObj] A sort object which can sort the visible set\n   */\n  filter(category, sortObj) {\n    if (!this.isEnabled) {\n      return;\n    }\n\n    if (!category || (category && category.length === 0)) {\n      category = Shuffle.ALL_ITEMS;\n    }\n\n    this._filter(category);\n\n    // Shrink each hidden item\n    this._shrink();\n\n    // How many visible elements?\n    this._updateItemCount();\n\n    // Update transforms on visible elements so they will animate to their new positions.\n    this.sort(sortObj);\n  }\n\n  /**\n   * Gets the visible elements, sorts them, and passes them to layout.\n   * @param {Object} opts the options object for the sorted plugin\n   */\n  sort(opts = this.lastSort) {\n    if (!this.isEnabled) {\n      return;\n    }\n\n    this._resetCols();\n\n    var items = this._getFilteredItems();\n    items = sorter(items, opts);\n\n    this._layout(items);\n\n    // `_layout` always happens after `_shrink`, so it's safe to process the style\n    // queue here with styles from the shrink method.\n    this._processQueue();\n\n    // Adjust the height of the container.\n    this._setContainerSize();\n\n    this.lastSort = opts;\n  }\n\n  /**\n   * Reposition everything.\n   * @param {boolean} isOnlyLayout If true, column and gutter widths won't be\n   *     recalculated.\n   */\n  update(isOnlyLayout) {\n    if (this.isEnabled) {\n\n      if (!isOnlyLayout) {\n        // Get updated colCount\n        this._setColumns();\n      }\n\n      // Layout items\n      this.sort();\n    }\n  }\n\n  /**\n   * Use this instead of `update()` if you don't need the columns and gutters updated\n   * Maybe an image inside `shuffle` loaded (and now has a height), which means calculations\n   * could be off.\n   */\n  layout() {\n    this.update(true);\n  }\n\n  /**\n   * New items have been appended to shuffle. Mix them in with the current\n   * filter or sort status.\n   * @param {Array.<Element>} newItems Collection of new items.\n   */\n  add(newItems) {\n    newItems = arrayUnique(newItems).map(el => new ShuffleItem(el));\n\n    // Add classes and set initial positions.\n    this._initItems(newItems);\n\n    // Add transition to each item.\n    this._setTransitions(newItems);\n\n    // Update the list of items.\n    this.items = this.items.concat(newItems);\n    this._updateItemsOrder();\n    this.filter(this.lastFilter);\n  }\n\n  /**\n   * Disables shuffle from updating dimensions and layout on resize\n   */\n  disable() {\n    this.isEnabled = false;\n  }\n\n  /**\n   * Enables shuffle again\n   * @param {boolean} [isUpdateLayout=true] if undefined, shuffle will update columns and gutters\n   */\n  enable(isUpdateLayout) {\n    this.isEnabled = true;\n    if (isUpdateLayout !== false) {\n      this.update();\n    }\n  }\n\n  /**\n   * Remove 1 or more shuffle items\n   * @param {Array.<Element>} collection An array containing one or more\n   *     elements in shuffle\n   * @return {Shuffle} The shuffle object\n   */\n  remove(collection) {\n    if (!collection.length) {\n      return;\n    }\n\n    collection = arrayUnique(collection);\n\n    let oldItems = collection\n      .map(element => this.getItemByElement(element))\n      .filter(item => !!item);\n\n    let handleLayout = () => {\n      this.element.removeEventListener(Shuffle.EventType.LAYOUT, handleLayout);\n      this._disposeItems(oldItems);\n\n      // Remove the collection in the callback\n      collection.forEach((element) => {\n        element.parentNode.removeChild(element);\n      });\n\n      this._dispatch(Shuffle.EventType.REMOVED, { collection });\n\n      // Let it get garbage collected\n      collection = null;\n      oldItems = null;\n    };\n\n    // Hide collection first.\n    this._toggleFilterClasses({\n      visible: [],\n      hidden: oldItems,\n    });\n\n    this._shrink(oldItems);\n\n    this.sort();\n\n    // Update the list of items here because `remove` could be called again\n    // with an item that is in the process of being removed.\n    this.items = this.items.filter(item => !arrayIncludes(oldItems, item));\n    this._updateItemCount();\n\n    this.element.addEventListener(Shuffle.EventType.LAYOUT, handleLayout);\n  }\n\n  /**\n   * Retrieve a shuffle item by its element.\n   * @param {Element} element Element to look for.\n   * @return {?ShuffleItem} A shuffle item or null if it's not found.\n   */\n  getItemByElement(element) {\n    for (var i = this.items.length - 1; i >= 0; i--) {\n      if (this.items[i].element === element) {\n        return this.items[i];\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Destroys shuffle, removes events, styles, and classes\n   */\n  destroy() {\n    this._cancelMovement();\n    window.removeEventListener('resize', this._onResize);\n\n    // Reset container styles\n    this.element.classList.remove('shuffle');\n    this.element.removeAttribute('style');\n\n    // Reset individual item styles\n    this._disposeItems();\n\n    // Null DOM references\n    this.items = null;\n    this.options.sizer = null;\n    this.element = null;\n    this._transitions = null;\n\n    // Set a flag so if a debounced resize has been triggered,\n    // it can first check if it is actually isDestroyed and not doing anything\n    this.isDestroyed = true;\n  }\n\n  /**\n   * Returns the outer width of an element, optionally including its margins.\n   *\n   * There are a few different methods for getting the width of an element, none of\n   * which work perfectly for all Shuffle's use cases.\n   *\n   * 1. getBoundingClientRect() `left` and `right` properties.\n   *   - Accounts for transform scaled elements, making it useless for Shuffle\n   *   elements which have shrunk.\n   * 2. The `offsetWidth` property.\n   *   - This value stays the same regardless of the elements transform property,\n   *   however, it does not return subpixel values.\n   * 3. getComputedStyle()\n   *   - This works great Chrome, Firefox, Safari, but IE<=11 does not include\n   *   padding and border when box-sizing: border-box is set, requiring a feature\n   *   test and extra work to add the padding back for IE and other browsers which\n   *   follow the W3C spec here.\n   *\n   * @param {Element} element The element.\n   * @param {boolean} [includeMargins] Whether to include margins. Default is false.\n   * @return {{width: number, height: number}} The width and height.\n   */\n  static getSize(element, includeMargins) {\n    // Store the styles so that they can be used by others without asking for it again.\n    var styles = window.getComputedStyle(element, null);\n    var width = getNumberStyle(element, 'width', styles);\n    var height = getNumberStyle(element, 'height', styles);\n\n    if (includeMargins) {\n      var marginLeft = getNumberStyle(element, 'marginLeft', styles);\n      var marginRight = getNumberStyle(element, 'marginRight', styles);\n      var marginTop = getNumberStyle(element, 'marginTop', styles);\n      var marginBottom = getNumberStyle(element, 'marginBottom', styles);\n      width += marginLeft + marginRight;\n      height += marginTop + marginBottom;\n    }\n\n    return {\n      width,\n      height,\n    };\n  }\n\n  /**\n   * Change a property or execute a function which will not have a transition\n   * @param {Array.<Element>} elements DOM elements that won't be transitioned.\n   * @param {Function} callback A function which will be called while transition\n   *     is set to 0ms.\n   * @private\n   */\n  static _skipTransitions(elements, callback) {\n    let zero = '0ms';\n\n    // Save current duration and delay.\n    let data = elements.map((element) => {\n      let style = element.style;\n      let duration = style.transitionDuration;\n      let delay = style.transitionDelay;\n\n      // Set the duration to zero so it happens immediately\n      style.transitionDuration = zero;\n      style.transitionDelay = zero;\n\n      return {\n        duration,\n        delay,\n      };\n    });\n\n    callback();\n\n    // Cause reflow.\n    elements[0].offsetWidth; // jshint ignore:line\n\n    // Put the duration back\n    elements.forEach((element, i) => {\n      element.style.transitionDuration = data[i].duration;\n      element.style.transitionDelay = data[i].delay;\n    });\n  }\n}\n\nShuffle.ShuffleItem = ShuffleItem;\n\nShuffle.ALL_ITEMS = 'all';\nShuffle.FILTER_ATTRIBUTE_KEY = 'groups';\n\n/**\n * @enum {string}\n */\nShuffle.EventType = {\n  LAYOUT: 'shuffle:layout',\n  REMOVED: 'shuffle:removed',\n};\n\n/** @enum {string} */\nShuffle.Classes = Classes;\n\n// Overrideable options\nShuffle.options = {\n  // Initial filter group.\n  group: Shuffle.ALL_ITEMS,\n\n  // Transition/animation speed (milliseconds).\n  speed: 250,\n\n  // CSS easing function to use.\n  easing: 'ease',\n\n  // e.g. '.picture-item'.\n  itemSelector: '*',\n\n  // Element or selector string. Use an element to determine the size of columns\n  // and gutters.\n  sizer: null,\n\n  // A static number or function that tells the plugin how wide the gutters\n  // between columns are (in pixels).\n  gutterWidth: 0,\n\n  // A static number or function that returns a number which tells the plugin\n  // how wide the columns are (in pixels).\n  columnWidth: 0,\n\n  // If your group is not json, and is comma delimeted, you could set delimeter\n  // to ','.\n  delimeter: null,\n\n  // Useful for percentage based heights when they might not always be exactly\n  // the same (in pixels).\n  buffer: 0,\n\n  // Reading the width of elements isn't precise enough and can cause columns to\n  // jump between values.\n  columnThreshold: 0.01,\n\n  // Shuffle can be isInitialized with a sort object. It is the same object\n  // given to the sort method.\n  initialSort: null,\n\n  // By default, shuffle will throttle resize events. This can be changed or\n  // removed.\n  throttle: throttle,\n\n  // How often shuffle can be called on resize (in milliseconds).\n  throttleTime: 300,\n\n  // Transition delay offset for each item in milliseconds.\n  staggerAmount: 15,\n\n  // Maximum stagger delay in milliseconds.\n  staggerAmountMax: 250,\n\n  // Whether to use transforms or absolute positioning.\n  useTransforms: true,\n};\n\n// Expose for testing. Hack at your own risk.\nShuffle.__Point = Point;\nShuffle.__sorter = sorter;\nShuffle.__getColumnSpan = getColumnSpan;\nShuffle.__getAvailablePositions = getAvailablePositions;\nShuffle.__getShortColumn = getShortColumn;\n\nexport default Shuffle;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shuffle.js\n **/","// Polyfill for creating CustomEvents on IE9/10/11\n\n// code pulled from:\n// https://github.com/d4tocchini/customevent-polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\ntry {\n  new window.CustomEvent(\"test\");\n} catch(e) {\n var CustomEvent = function(event, params) {\n      var evt;\n      params = params || {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n      };\n\n      evt = document.createEvent(\"CustomEvent\");\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return evt;\n  };\n\n  CustomEvent.prototype = window.Event.prototype;\n  window.CustomEvent = CustomEvent; // expose definition to window\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/custom-event-polyfill/custom-event-polyfill.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n\nvar proto = Element.prototype;\nvar vendor = proto.matches\n  || proto.matchesSelector\n  || proto.webkitMatchesSelector\n  || proto.mozMatchesSelector\n  || proto.msMatchesSelector\n  || proto.oMatchesSelector;\n\nmodule.exports = match;\n\n/**\n * Match `el` to `selector`.\n *\n * @param {Element} el\n * @param {String} selector\n * @return {Boolean}\n * @api public\n */\n\nfunction match(el, selector) {\n  if (vendor) return vendor.call(el, selector);\n  var nodes = el.parentNode.querySelectorAll(selector);\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i] == el) return true;\n  }\n  return false;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/matches-selector/index.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\n// there's 3 implementations written in increasing order of efficiency\n\n// 1 - no Set type is defined\nfunction uniqNoSet(arr) {\n\tvar ret = [];\n\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (ret.indexOf(arr[i]) === -1) {\n\t\t\tret.push(arr[i]);\n\t\t}\n\t}\n\n\treturn ret;\n}\n\n// 2 - a simple Set type is defined\nfunction uniqSet(arr) {\n\tvar seen = new Set();\n\treturn arr.filter(function (el) {\n\t\tif (!seen.has(el)) {\n\t\t\tseen.add(el);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t});\n}\n\n// 3 - a standard Set type is defined and it has a forEach method\nfunction uniqSetWithForEach(arr) {\n\tvar ret = [];\n\n\t(new Set(arr)).forEach(function (el) {\n\t\tret.push(el);\n\t});\n\n\treturn ret;\n}\n\n// V8 currently has a broken implementation\n// https://github.com/joyent/node/issues/8449\nfunction doesForEachActuallyWork() {\n\tvar ret = false;\n\n\t(new Set([true])).forEach(function (el) {\n\t\tret = el;\n\t});\n\n\treturn ret === true;\n}\n\nif ('Set' in global) {\n\tif (typeof Set.prototype.forEach === 'function' && doesForEachActuallyWork()) {\n\t\tmodule.exports = uniqSetWithForEach;\n\t} else {\n\t\tmodule.exports = uniqSet;\n\t}\n} else {\n\tmodule.exports = uniqNoSet;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/array-uniq/index.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xtend/immutable.js\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = throttle;\n\n/**\n * Returns a new function that, when invoked, invokes `func` at most once per `wait` milliseconds.\n *\n * @param {Function} func Function to wrap.\n * @param {Number} wait Number of milliseconds that must elapse between `func` invocations.\n * @return {Function} A new function that wraps the `func` function passed in.\n */\n\nfunction throttle (func, wait) {\n  var ctx, args, rtn, timeoutID; // caching\n  var last = 0;\n\n  return function throttled () {\n    ctx = this;\n    args = arguments;\n    var delta = new Date() - last;\n    if (!timeoutID)\n      if (delta >= wait) call();\n      else timeoutID = setTimeout(call, wait - delta);\n    return rtn;\n  };\n\n  function call () {\n    timeoutID = 0;\n    last = +new Date();\n    rtn = func.apply(ctx, args);\n    ctx = null;\n    args = null;\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/throttleit/index.js\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = function parallel(fns, context, callback) {\n  if (!callback) {\n    if (typeof context === 'function') {\n      callback = context\n      context = null\n    } else {\n      callback = noop\n    }\n  }\n\n  var pending = fns && fns.length\n  if (!pending) return callback(null, []);\n\n  var finished = false\n  var results = new Array(pending)\n\n  fns.forEach(context ? function (fn, i) {\n    fn.call(context, maybeDone(i))\n  } : function (fn, i) {\n    fn(maybeDone(i))\n  })\n\n  function maybeDone(i) {\n    return function (err, result) {\n      if (finished) return;\n\n      if (err) {\n        callback(err, results)\n        finished = true\n        return\n      }\n\n      results[i] = result\n\n      if (!--pending) callback(null, results);\n    }\n  }\n}\n\nfunction noop() {}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/array-parallel/index.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\n\nimport getNumber from './get-number';\n\n/**\n * Represents a coordinate pair.\n * @param {number} [x=0] X.\n * @param {number} [y=0] Y.\n */\nconst Point = function (x, y) {\n  this.x = getNumber(x);\n  this.y = getNumber(y);\n};\n\n/**\n * Whether two points are equal.\n * @param {Point} a Point A.\n * @param {Point} b Point B.\n * @return {boolean}\n */\nPoint.equals = function (a, b) {\n  return a.x === b.x && a.y === b.y;\n};\n\nexport default Point;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/point.js\n **/","'use strict';\n\n/**\n * Always returns a numeric value, given a value. Logic from jQuery's `isNumeric`.\n * @param {*} value Possibly numeric value.\n * @return {number} `value` or zero if `value` isn't numeric.\n */\nexport default function getNumber(value) {\n  return parseFloat(value) || 0;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/get-number.js\n **/","import Point from './point';\nimport Classes from './classes';\n\nlet id = 0;\n\nclass ShuffleItem {\n  constructor(element) {\n    this.id = id++;\n    this.element = element;\n    this.isVisible = true;\n  }\n\n  show() {\n    this.isVisible = true;\n    this.element.classList.remove(Classes.HIDDEN);\n    this.element.classList.add(Classes.VISIBLE);\n  }\n\n  hide() {\n    this.isVisible = false;\n    this.element.classList.remove(Classes.VISIBLE);\n    this.element.classList.add(Classes.HIDDEN);\n  }\n\n  init() {\n    this.addClasses([Classes.SHUFFLE_ITEM, Classes.VISIBLE]);\n    this.applyCss(ShuffleItem.Css.INITIAL);\n    this.scale = ShuffleItem.Scale.VISIBLE;\n    this.point = new Point();\n  }\n\n  addClasses(classes) {\n    classes.forEach((className) => {\n      this.element.classList.add(className);\n    });\n  }\n\n  removeClasses(classes) {\n    classes.forEach((className) => {\n      this.element.classList.remove(className);\n    });\n  }\n\n  applyCss(obj) {\n    for (var key in obj) {\n      this.element.style[key] = obj[key];\n    }\n  }\n\n  dispose() {\n    this.removeClasses([\n      Classes.HIDDEN,\n      Classes.VISIBLE,\n      Classes.SHUFFLE_ITEM,\n    ]);\n\n    this.element.removeAttribute('style');\n    this.element = null;\n  }\n}\n\nShuffleItem.Css = {\n  INITIAL: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    visibility: 'visible',\n    'will-change': 'transform',\n  },\n  VISIBLE: {\n    before: {\n      opacity: 1,\n      visibility: 'visible',\n    },\n    after: {},\n  },\n  HIDDEN: {\n    before: {\n      opacity: 0,\n    },\n    after: {\n      visibility: 'hidden',\n    },\n  },\n};\n\nShuffleItem.Scale = {\n  VISIBLE: 1,\n  HIDDEN: 0.001,\n};\n\nexport default ShuffleItem;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shuffle-item.js\n **/","export default {\n  BASE: 'shuffle',\n  SHUFFLE_ITEM: 'shuffle-item',\n  VISIBLE: 'shuffle-item--visible',\n  HIDDEN: 'shuffle-item--hidden',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/classes.js\n **/","'use strict';\n\nimport getNumber from './get-number';\nimport COMPUTED_SIZE_INCLUDES_PADDING from './computed-size';\n\n/**\n * Retrieve the computed style for an element, parsed as a float.\n * @param {Element} element Element to get style for.\n * @param {string} style Style property.\n * @param {CSSStyleDeclaration} [styles] Optionally include clean styles to\n *     use instead of asking for them again.\n * @return {number} The parsed computed value or zero if that fails because IE\n *     will return 'auto' when the element doesn't have margins instead of\n *     the computed style.\n */\nexport default function getNumberStyle(element, style,\n    styles = window.getComputedStyle(element, null)) {\n  var value = getNumber(styles[style]);\n\n  // Support IE<=11 and W3C spec.\n  if (!COMPUTED_SIZE_INCLUDES_PADDING && style === 'width') {\n    value += getNumber(styles.paddingLeft) +\n      getNumber(styles.paddingRight) +\n      getNumber(styles.borderLeftWidth) +\n      getNumber(styles.borderRightWidth);\n  } else if (!COMPUTED_SIZE_INCLUDES_PADDING && style === 'height') {\n    value += getNumber(styles.paddingTop) +\n      getNumber(styles.paddingBottom) +\n      getNumber(styles.borderTopWidth) +\n      getNumber(styles.borderBottomWidth);\n  }\n\n  return value;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/get-number-style.js\n **/","\nlet element = document.body || document.documentElement;\nlet e = document.createElement('div');\ne.style.cssText = 'width:10px;padding:2px;box-sizing:border-box;';\nelement.appendChild(e);\n\nlet width = window.getComputedStyle(e, null).width;\nlet ret = width === '10px';\n\nelement.removeChild(e);\n\nexport default ret;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/computed-size.js\n **/","'use strict';\n\nimport xtend from 'xtend';\n\n// http://stackoverflow.com/a/962890/373422\nfunction randomize(array) {\n  var tmp;\n  var current;\n  let top = array.length;\n\n  if (!top) {\n    return array;\n  }\n\n  while (--top) {\n    current = Math.floor(Math.random() * (top + 1));\n    tmp = array[current];\n    array[current] = array[top];\n    array[top] = tmp;\n  }\n\n  return array;\n}\n\nlet defaults = {\n  // Use array.reverse() to reverse the results\n  reverse: false,\n\n  // Sorting function\n  by: null,\n\n  // If true, this will skip the sorting and return a randomized order in the array\n  randomize: false,\n\n  // Determines which property of each item in the array is passed to the\n  // sorting method.\n  key: 'element',\n};\n\n// You can return `undefined` from the `by` function to revert to DOM order.\nexport default function sorter(arr, options) {\n  let opts = xtend(defaults, options);\n  let original = [].slice.call(arr);\n  let revert = false;\n\n  if (!arr.length) {\n    return [];\n  }\n\n  if (opts.randomize) {\n    return randomize(arr);\n  }\n\n  // Sort the elements by the opts.by function.\n  // If we don't have opts.by, default to DOM order\n  if (typeof opts.by === 'function') {\n    arr.sort(function (a, b) {\n\n      // Exit early if we already know we want to revert\n      if (revert) {\n        return 0;\n      }\n\n      let valA = opts.by(a[opts.key]);\n      let valB = opts.by(b[opts.key]);\n\n      // If both values are undefined, use the DOM order\n      if (valA === undefined && valB === undefined) {\n        revert = true;\n        return 0;\n      }\n\n      if (valA < valB || valA === 'sortFirst' || valB === 'sortLast') {\n        return -1;\n      }\n\n      if (valA > valB || valA === 'sortLast' || valB === 'sortFirst') {\n        return 1;\n      }\n\n      return 0;\n    });\n  }\n\n  // Revert to the original array if necessary\n  if (revert) {\n    return original;\n  }\n\n  if (opts.reverse) {\n    arr.reverse();\n  }\n\n  return arr;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/sorter.js\n **/","'use strict';\n\nlet transitions = {};\nlet eventName = 'transitionend';\nlet count = 0;\n\nfunction uniqueId() {\n  return eventName + count++;\n}\n\nexport function onTransitionEnd(element, callback) {\n  let id = uniqueId();\n  let listener = (evt) => {\n    if (evt.currentTarget === evt.target) {\n      cancelTransitionEnd(id);\n      callback(evt);\n    }\n  };\n\n  element.addEventListener(eventName, listener);\n\n  transitions[id] = { element, listener };\n\n  return id;\n}\n\nexport function cancelTransitionEnd(id) {\n  if (transitions[id]) {\n    transitions[id].element.removeEventListener(eventName, transitions[id].listener);\n    transitions[id] = null;\n    return true;\n  }\n\n  return false;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/on-transition-end.js\n **/","'use strict';\n\nimport Point from './point';\n\nfunction arrayMax(array) {\n  return Math.max.apply(Math, array);\n}\n\nfunction arrayMin(array) {\n  return Math.min.apply(Math, array);\n}\n\n/**\n * Determine the location of the next item, based on its size.\n * @param {Object} itemSize Object with width and height.\n * @param {Array.<number>} positions Positions of the other current items.\n * @param {number} gridSize The column width or row height.\n * @param {number} total The total number of columns or rows.\n * @param {number} threshold Buffer value for the column to fit.\n * @param {number} buffer Vertical buffer for the height of items.\n * @return {Point}\n */\nexport function getItemPosition({ itemSize, positions, gridSize, total, threshold, buffer }) {\n  var span = getColumnSpan(itemSize.width, gridSize, total, threshold);\n  var setY = getAvailablePositions(positions, span, total);\n  var shortColumnIndex = getShortColumn(setY, buffer);\n\n  // Position the item\n  var point = new Point(\n    Math.round(gridSize * shortColumnIndex),\n    Math.round(setY[shortColumnIndex]));\n\n  // Update the columns array with the new values for each column.\n  // e.g. before the update the columns could be [250, 0, 0, 0] for an item\n  // which spans 2 columns. After it would be [250, itemHeight, itemHeight, 0].\n  var setHeight = setY[shortColumnIndex] + itemSize.height;\n  for (var i = 0; i < span; i++) {\n    positions[shortColumnIndex + i] = setHeight;\n  }\n\n  return point;\n}\n\n/**\n * Determine the number of columns an items spans.\n * @param {number} itemWidth Width of the item.\n * @param {number} columnWidth Width of the column (includes gutter).\n * @param {number} columns Total number of columns\n * @param {number} threshold A buffer value for the size of the column to fit.\n * @return {number}\n */\nexport function getColumnSpan(itemWidth, columnWidth, columns, threshold) {\n  var columnSpan = itemWidth / columnWidth;\n\n  // If the difference between the rounded column span number and the\n  // calculated column span number is really small, round the number to\n  // make it fit.\n  if (Math.abs(Math.round(columnSpan) - columnSpan) < threshold) {\n    // e.g. columnSpan = 4.0089945390298745\n    columnSpan = Math.round(columnSpan);\n  }\n\n  // Ensure the column span is not more than the amount of columns in the whole layout.\n  return Math.min(Math.ceil(columnSpan), columns);\n}\n\n/**\n * Retrieves the column set to use for placement.\n * @param {number} columnSpan The number of columns this current item spans.\n * @param {number} columns The total columns in the grid.\n * @return {Array.<number>} An array of numbers represeting the column set.\n */\nexport function getAvailablePositions(positions, columnSpan, columns) {\n  // The item spans only one column.\n  if (columnSpan === 1) {\n    return positions;\n  }\n\n  // The item spans more than one column, figure out how many different\n  // places it could fit horizontally.\n  // The group count is the number of places within the positions this block\n  // could fit, ignoring the current positions of items.\n  // Imagine a 2 column brick as the second item in a 4 column grid with\n  // 10px height each. Find the places it would fit:\n  // [20, 10, 10, 0]\n  //  |   |   |\n  //  *   *   *\n  //\n  // Then take the places which fit and get the bigger of the two:\n  // max([20, 10]), max([10, 10]), max([10, 0]) = [20, 10, 0]\n  //\n  // Next, find the first smallest number (the short column).\n  // [20, 10, 0]\n  //          |\n  //          *\n  //\n  // And that's where it should be placed!\n  //\n  // Another example where the second column's item extends past the first:\n  // [10, 20, 10, 0] => [20, 20, 10] => 10\n  var available = [];\n\n  // For how many possible positions for this item there are.\n  for (var i = 0; i <= columns - columnSpan; i++) {\n    // Find the bigger value for each place it could fit.\n    available.push(arrayMax(positions.slice(i, i + columnSpan)));\n  }\n\n  return available;\n}\n\n/**\n * Find index of short column, the first from the left where this item will go.\n *\n * @param {Array.<number>} positions The array to search for the smallest number.\n * @param {number} buffer Optional buffer which is very useful when the height\n *     is a percentage of the width.\n * @return {number} Index of the short column.\n */\nexport function getShortColumn(positions, buffer) {\n  var minPosition = arrayMin(positions);\n  for (var i = 0, len = positions.length; i < len; i++) {\n    if (positions[i] >= minPosition - buffer && positions[i] <= minPosition + buffer) {\n      return i;\n    }\n  }\n\n  return 0;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/layout.js\n **/"],"sourceRoot":""}